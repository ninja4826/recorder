/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'huesk' at '1/27/16 12:02 PM' with Gradle 2.9
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.9/userguide/tutorial_java_projects.html
 */

plugins {
    id 'application'
    id 'eclipse'
    id 'groovy'
    id 'java'
    id 'com.github.johnrengelman.shadow' version '1.2.2'
}

// apply plugin: 'application'
// apply plugin: 'eclipse'
// apply plugin: 'groovy'
// // Apply the java plugin to add support for Java
// apply plugin: 'java'

// group = 'me.ninja4826'
version = '0.0.1'
mainClassName = 'me.ninja4826.recorder.App'

sourceSets {
    main {
        java { srcDirs = [] }
        groovy {
            srcDir 'src/main/groovy'
        }
        resources {
            srcDir 'src/main/resources'
        }
    }
}

// In this section you declare where to find the dependencies of your project
repositories {
    mavenCentral()
    mavenLocal()
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.13'
    compile 'org.codehaus.groovy:groovy-all:2.4.5'
    compile 'com.github.sarxos:webcam-capture:0.3.10'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}

ext {
    defaultDebug = false
    // mainClass = 'me.ninja4826.recorder.App'
}

jar {
    manifest {
        attributes 'Implementation-Title': 'Webcam Recorder',
            // 'Implementation-Version': version,
            // 'Main-Class': mainClass
            'Implementation-Version': version
    }
}

task debugSourceSets << {
    sourceSets.each {
        println "sourceSet.name = " + it.name
    }
}

task runDebug(dependsOn: 'classes', type: JavaExec) {
    main = mainClassName
    classpath = sourceSets.main.runtimeClasspath
    args 'debug'
}

task runProduction(dependsOn: 'classes', type: JavaExec) {
    main = mainClassName
    classpath = sourceSets.main.runtimeClasspath
}

// task fatJar(dependsOn: clean, type: Jar) {
//     manifest {
//         attributes 'Implementation-Title': 'Webcam Recorder',
//             'Implementation-Version': version,
//             'Main-Class': mainClass
//     }
//     baseName = project.name + '-all'
//     from files(sourceSets.main.output.classesDir)
//     from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
//     with jar
// }
